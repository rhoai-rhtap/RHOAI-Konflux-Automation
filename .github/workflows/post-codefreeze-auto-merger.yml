name: Auto Merge PRs

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the Python script on'
        required: true
        default: 'main'

jobs:
  auto-merge-prs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Run the Python script and capture the output in a file
      - name: Run Python Script
        id: run_script
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GH }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_TEST }}
        run: |
          python Konflux-auto-merger/main.py.py --branch "${{ github.event.inputs.branch }}" | tee script_output.txt
      
      # Read the output from the file and save it to a formatted Slack message
      - name: Summary
        id: summary
        run: |
          # Read the output from the script and remove ANSI escape codes
          output=$(cat script_output.txt | sed 's/\x1B\[[0-9;]*m//g')

          # Replace valid messages with checkmarks and invalid messages with cross marks
          formatted_output=$(echo "$output" | sed -E 's/(valid.*|allowed.*)/✅ &/g; s/(No JIRA ID.*|not a member.*)/❌ &/g')

          # Prepare the Slack message with user or channel mentions
          slack_message="*Branch:* ${GITHUB_REF}\n*Output:*\n${formatted_output}\n\n<!channel>  :here!" 

          # Prepare the message for Slack using GITHUB_OUTPUT
          echo 'slack-message<<EOF' >> $GITHUB_OUTPUT
          echo "$slack_message" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          
      # Slack Notification on Success
      - name: Slack Notification on Success
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFIER }}
          SLACK_USERNAME: "Auto-Merge"
          SLACK_TITLE: "Merge Summary"
          SLACK_MESSAGE: ${{ steps.summary.outputs.slack-message }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/95714513?s=400&u=a00afc56cfc57ef9aa0fab1540f70a8507df3e96
          SLACK_COLOR: '#36a64f'  # Green color for success

      # Slack Notification on Failure
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFIER }}
          SLACK_USERNAME: "Auto-Merge"
          SLACK_TITLE: "Merge Failed"
          SLACK_MESSAGE: ${{ steps.summary.outputs.slack-message }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/957145c56cfc57ef9aa0fab1540f70a8507df3e96
          SLACK_COLOR: '#ff0000'  # Red color for failure